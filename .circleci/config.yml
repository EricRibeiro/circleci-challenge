version: 2.1

aliases: # https://circleci.com/blog/circleci-hacks-reuse-yaml-in-your-circleci-config-with-yaml/
  - &defaults
      docker: 
        - image: cimg/node:14.15.4
  - &attach_workspace
      attach_workspace:
        at: ~/project
  - &restore_cache
      restore_cache: # using progressively more generic keys to increase hit odds
        keys:
          - yarn-packages-v1-{{ checksum "yarn.lock" }}
          - yarn-packages-v1-
  - &install_packages
      run: 
        name: Install packages
        command: yarn --frozen-lockfile --cache-folder ~/.cache/yarn

jobs:
  test:
    <<: *defaults
    parallelism: 2
    steps:
      - checkout
      - *restore_cache
      - *install_packages
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ checksum "yarn.lock" }}
      - run:
          name: Split tests
          command: |
            TEST_FILES=$(circleci tests glob "src/**/*.test.ts" | circleci tests split --split-by=timings)
            echo "export TEST_FILES_ENV=$TEST_FILES" >> $BASH_ENV
      - run:
          name: Run tests
          command: |
            echo "Running test cases in: $TEST_FILES_ENV"
            yarn test $TEST_FILES_ENV
      - run: # https://github.com/michaelleeallen/mocha-junit-reporter/issues/132#issuecomment-864212687
          name: Process test report
          when: always
          command: |
            # Convert absolute paths to relative to support splitting tests by timing
            if [ -e test-results.xml ]; then
              sed -i "s|`pwd`/||g" test-results.xml
            fi            
      - store_test_results:
          path: test-results.xml
      - run:
          name: Run coverage
          command: |
            echo "Running coverage in: $TEST_FILES_ENV"
            yarn coverage $TEST_FILES_ENV
      - store_artifacts:
          path: coverage
      
  build:
    <<: *defaults
    steps:
      - checkout # it's probably better to checkout again than persisting the workspace twice in the previous job
      - *restore_cache
      - *install_packages
      - run:
          name: Build project
          command: yarn build
      - persist_to_workspace:
          root: ./
          paths:
            - "."

  deploy:
    <<: *defaults
    steps:
      - *attach_workspace
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
      - run:
          name: Publish package
          command: yarn publish
      - run:
          name: Pack artifacts
          command: |
            mkdir -p ~/tmp/artifacts
            yarn pack
            cp ./*.tgz ~/tmp/artifacts
      - store_artifacts:
          path: ~/tmp/artifacts

workflows:
  version: 2
  test_and_build:
    jobs:
      - test
      - build:
          requires:
            - test
  deploy:
    when:
      equal : [ master, << pipeline.git.branch >> ]
    jobs:
      - deploy:
          requires:
            - build